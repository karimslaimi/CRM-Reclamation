@model PFE_reclamation.Models.Agent

@{
    ViewBag.Title = "profile";
    Layout = "~/Views/Shared/AgentLayout.cshtml";
}



<div class="content">

    <div class="intro-y box lg:mt-5">
        <div class="flex items-center p-5 border-b border-gray-200 dark:border-dark-5">
            <h2 class="font-medium text-base mr-auto">
                Information Personnel
            </h2>
        </div>
        @using (Html.BeginForm("profile", "Agent", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-theme-6" })
            @Html.HiddenFor(model => model.id)


            @Html.HiddenFor(model => model.departementId)
            @Html.HiddenFor(model => model.password)
            @Html.HiddenFor(model => model.date_aff)
            @Html.HiddenFor(model => model.photo)
            @Html.HiddenFor(model => model.enabled)

            <div class="flex flex-col  lg:flex-row border-b border-gray-200 dark:border-dark-5 pb-5 -mx-5">
                <div class="flex flex-1 px-5 items-center justify-center ">
                    <div class="w-20 h-20 sm:w-24 sm:h-24 flex-none lg:w-32 lg:h-32 image-fit relative">
                        @{

                            string srcimg = "/Content/images/" + Model.photo;
                            if (Model.photo == null)
                            {
                                srcimg = "/Content/images/profile-1.jpg";
                            }



                        }

                        <img alt="Midone Tailwind HTML Admin Template" class="rounded-full" id="imgfield" src="@srcimg">
                        <div onclick="activate()" class="absolute mb-1 mr-1 flex items-center justify-center bottom-0 right-0 bg-theme-1 rounded-full p-2">
                            <input type="file" name="postedFile" id="pic" hidden="hidden">
                            <i class="w-4 h-4 text-white" data-feather="camera"></i>
                        </div>

                    </div>

                </div>

            </div>
            <div class="p-5">
                <div class="grid grid-cols-12 gap-5">
                    <div class="col-span-12 xl:col-span-6">

                        <div class="mt-3">
                            <label>Nom d'utilisateur</label>
                            @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "input w-full border    mt-2" } })
                            @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-theme-6 mt-2" })
                        </div>
                        <div class="mt-3">
                            <label>Nom</label>

                            @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "input w-full border mt-2" } })
                            @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-theme-6 mt-2" })

                        </div>
                        <div class="mt-3">
                            <label>Prenom</label>
                            @Html.EditorFor(model => model.prenom, new { htmlAttributes = new { @class = "input w-full border mt-2" } })
                            @Html.ValidationMessageFor(model => model.prenom, "", new { @class = "text-theme-6 mt-2" })
                        </div>
                        @{ string dt = Model.date_aff.Date.ToString("dd/MM/yyyy");}
                        <div class="mt-3">
                            <label>Date d'affectation</label>
                            <input class="input w-full border mt-2" value="@dt" disabled="disabled" />
                        </div>

                    </div>
                    <div class="col-span-12 xl:col-span-6">
                        <div class="mt-3">
                            <label>Email</label>

                            @Html.EditorFor(model => model.mail, new { htmlAttributes = new { @class = "input w-full border    mt-2" } })
                            @Html.ValidationMessageFor(model => model.mail, "", new { @class = "text-theme-6 mt-2" })
                        </div>
                        <div class="mt-3">
                            <label>Numéro téléphone</label>
                            @Html.EditorFor(model => model.tel, new { htmlAttributes = new { @class = "input w-full border mt-2" } })
                            @Html.ValidationMessageFor(model => model.tel, "", new { @class = "text-theme-6 mt-2" })
                        </div>

                        <div class="mt-3">
                            <label>CIN</label>
                            @Html.EditorFor(model => model.cin, new { htmlAttributes = new { @class = "input w-full border mt-2" } })
                            @Html.ValidationMessageFor(model => model.cin, "", new { @class = "text-theme-6 mt-2" })
                        </div>

                        <div class="mt-3">
                            <label>Département</label>
                            <input class="input w-full border mt-2" value="@Model.departement.label" disabled="disabled" />

                        </div>
                    </div>
                </div>
                <div class="flex justify-end mt-4">
                    @if (ViewBag.msg != null)
                    {

                        <span class="text-theme-9">
                            @ViewBag.msg
                        </span>
                    }
                    @if (ViewBag.error != null)
                    {

                        <span class=" text-theme-6 ">
                            @ViewBag.error
                        </span>
                    }
                    <button type="submit" class="button w-22 bg-theme-1 text-white ml-auto">Enregistrer</button>
                </div>
            </div>
        }
    </div>


    <div class="intro-y box lg:mt-5">
        <div class="flex items-center p-5 border-b border-gray-200 dark:border-dark-5">
            <h2 class="font-medium text-base mr-auto">
                Changer Mot de Passe
            </h2>
        </div>

        @using (Html.BeginForm("passwordchange", "Agent")) {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-theme-6" })
            @Html.HiddenFor(model => model.id)
            <input type="hidden" value="@Model.id" />

            <div class="p-5">
                <div class="grid grid-cols-12 gap-5">
                    <div class="col-span-12 xl:col-span-6">



                        <div class="mt-3">
                            <label>Mot de passe</label>
                            <input type="password" name="pass" class="input w-full border mt-2" placeholder="nouveau mot de passe" />
                        </div>


                    </div>
                    <div class="col-span-12 xl:col-span-6">

                        <div class="mt-3">
                            <label>Confirmer mot de passe</label>
                            <input type="password" name="cpass" class="input w-full border mt-2" placeholder="Confirmer mot de passe" />
                        </div>
                    </div>
                </div>
                <div class="flex justify-end mt-4">
                    @if (ViewBag.passerr != null) {

                        <span class="text-theme-6">
                            @ViewBag.passerr
                        </span>
                        }
                    @if (ViewBag.passmsg != null) {

                        <span class="text-theme-6">
                            @ViewBag.passmsg
                        </span>
                        }
                    <button type="submit" class="button w-22 bg-theme-1 text-white ml-auto">Changer</button>
                </div>
            </div>
            }
    </div>





</div>

<script>
    activate = function () {
        var inp = document.getElementById("pic");
        inp.readOnly = false;
        inp.click();
        console.log("ggg")
    };






    document.getElementById('pic').onchange = function (event) {

        var selectedFile = event.target.files[0];
        var reader = new FileReader();

        var imgtag = document.getElementById("imgfield");
        imgtag.title = selectedFile.name;

        reader.onload = function (event) {
            imgtag.src = event.target.result;
        };

        reader.readAsDataURL(selectedFile);
    }


    window.onload = function () {

        var dashlink = this.document.getElementById("dashlink");
        var profilelink = this.document.getElementById("profilelink");

        dashlink.classList.remove("side-menu--active");
        profilelink.classList.add("side-menu--active");


    };
</script>
